<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--스프링 컨벤션룰 정의-->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>

    <!--패턴 정의-->
    <property name="CONSOL_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}] %clr(%5level) %magenta([PID: ${PID}]) --- [%15.15t] %cyan(%-40logger) : %msg%n"/>
    <property name="FILE_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}] %5level [PID: ${PID}] --- [%15.15t] %-40logger : %msg%n"/>

    <!-- PID를 로드 -->
    <springProperty name="PID" source="PID" defaultValue="UNKNOWN"/>

    <!--로그 파일 저장 위치-->
    <property name="LOGS_PATH" value="./logs"/>
    <!--    <springProfile name="local">-->
    <!--        <property name="LOGS_PATH" value="./logs/local"/>-->
    <!--    </springProfile>-->

    <!--    <springProfile name="stage">-->
    <!--        <property name="LOGS_PATH" value="./logs/stage"/>-->
    <!--    </springProfile>-->

    <!--    <springProfile name="prod">-->
    <!--        <property name="LOGS_PATH" value="./logs/prod"/>-->
    <!--    </springProfile>-->


    <!-- 콘솔 로그 출력 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOL_LOG_PATTERN}</pattern>


        </encoder>
    </appender>

    <!-- 파일 로그 출력 설정 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGS_PATH}/logback.log</file> <!-- 로그 파일 경로 -->
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/logback.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 100MB -->
                <maxFileSize>10KB</maxFileSize>
                <!-- kb, mb, gb -->
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--30일 넘으면 삭제-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- Fluentd로 로그 전송 -->
    <appender name="FLUENT" class="com.java.CustomFluentdAppender">
        <remoteHost>localhost</remoteHost> <!-- Fluentd가 실행 중인 호스트 -->
        <port>24224</port> <!-- Fluentd 포트 -->
        <reconnectionDelay>10000</reconnectionDelay> <!-- 재접속 시도 간격 (10초) -->
        <tag>springboot</tag> <!-- 로그 태그 -->
    </appender>


    <!-- AsyncAppender로 비동기 처리 -->
    <appender name="ASYNC_FLUENT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 큐 사이즈 설정 -->
        <queueSize>10000</queueSize> <!-- 최대 큐 크기 설정 -->
        <neverBlock>false</neverBlock> <!-- 블록을 방지하기 위해 true 설정 -->
        <maxFlushTime>1000</maxFlushTime> <!-- 최대 플러시 대기 시간 (밀리초) -->
        <appender-ref ref="FLUENT"/> <!-- FLUENT appender 참조 -->
    </appender>



    <logger name="com.java" level="INFO"> <!--특정 패키지의 로그만 추적 -->
        <appender-ref ref="FILE"/>
        <appender-ref ref="ASYNC_FLUENT"/>
    </logger>

    <logger name="com.java" level="DEBUG"/>
    <!-- 루트 로거 설정 -->
    <root level="INFO"> <!-- 로그 레벨을 INFO로 설정 -->
        <appender-ref ref="CONSOLE"/>
    </root>


</configuration>

